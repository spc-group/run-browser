# https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-python

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  uv-lock-file:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v5
      - name: Set up UV and Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v7
      - name: Check uv lock file
        run: uv lock --check

  linting:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v5
      - uses: prefix-dev/setup-pixi@v0.9.2
        with:
          pixi-version: v0.49.0
          cache: true
          environments: py313
      - name: Ruff linting
        run: pixi run -e py313 ruff check src/ tests/
      - name: Enforce formatting standards
        run: pixi run -e py313 black --check --preview src/ tests/
      - name: Enforce import sorting
        run: pixi run -e py313 isort --check src/ tests/

  type-checking:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs: linting
    strategy:
      matrix:
        environment: ["py312", "py313"]
    steps:
      - uses: actions/checkout@v5
      - name: Set up Pixi environment ${{ matrix.environment }}
        uses: prefix-dev/setup-pixi@v0.9.2
        with:
          pixi-version: v0.49.0
          cache: true
          environments: ${{ matrix.environment }}
      - name: Run type checker
        run: pixi run --environment ${{ matrix.environment }} mypy

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: linting
    strategy:
      matrix:
        environment: ["py312", "py313"]
    steps:
      - uses: actions/checkout@v5
      - name: Set up Pixi environment ${{ matrix.environment }}
        uses: prefix-dev/setup-pixi@v0.9.2
        with:
          pixi-version: v0.49.0
          cache: true
          environments: ${{ matrix.environment }}
      # You can test your matrix by printing the current Python version
      - name: Run headless test
        run: pixi run --environment ${{ matrix.environment }} pytest
  release-tag:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [uv-lock-file, linting, type-checking, tests]
    steps:
      - name: update-release-tag
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/release',
              sha: context.sha
            });
